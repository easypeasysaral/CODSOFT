#include <iostream>
using namespace std;

class node {
public:
    node* next;
    string task;
    node(string s) { 
        next = NULL;
        task = s;
    }
};

class task {
public:
    node* head;
    node* tail;
    int size;
    task() {
        head = tail = NULL;
        size = 0;
    }

    void addtask(string s) {
        node* temp = new node(s);
        if (size == 0) {
            head = tail = temp;
        } else {
            tail->next = temp;
            tail = temp;
        }
        size++;
    }

    void deletetask(int idx) {
        if (idx < 1 || idx > size) { 
            cout << "INVALID" << endl;
            return;
        } else if (idx == 1) {
            if (size == 0) {
                cout << "LINKED LIST IS EMPTY" << endl;
                return;
            }
            node* temp = head;
            head = head->next;
            delete temp;
            size--;
            if (size == 0) {
                tail = NULL;
            }
        } else {
            node* temp = head;
            for (int i = 1; i < idx - 1; i++) {
                temp = temp->next;
            }
            node* del = temp->next;
            temp->next = temp->next->next;
            delete del;
            size--;
            if (temp->next == NULL) {
                tail = temp;
            }
        }
    }

    void deletealltask() {
        while (head != NULL) {
            node* temp = head;
            head = head->next;
            delete temp;
        }
        tail = NULL;
        size = 0;
    }

    void display() {
        if(size ==0){
            cout << "NO TASK ADDED " << endl;
        }
        node* temp = head;
        int i = 1;
        while (temp != NULL) {
            cout << i << ". " << temp->task << endl;
            temp = temp->next;
            i++;
        }
    }

    ~task() {
        deletealltask();
        cout << "\nTO DO LIST IS DELETED";
    }
};

int main() {
    cout << "                TO DO LIST        " << endl;
    cout << "TYPE 1 TO ADD TASK" << endl;
    cout << "TYPE 2 TO DELETE TASK " << endl;
    cout << "TYPE 3 TO DELETE ALL THE TASKS "<< endl;
    cout << "TYPE 4 TO DISPLAY YOUR TASKS" << endl;
    task obj;
    int n;
    while (true) {
        cout << "ENTER YOUR CHOICE: ";
        cin >> n;
        cin.ignore();

        switch (n) {
        case 1: {
            string t;
            cout << "ENTER YOUR TASK: ";
            getline(cin, t);
            obj.addtask(t);
            break;
        }
        case 2: {
            int i;
            cout << "ENTER THE NUMBER OF TASK THAT YOU WANT TO DELETE: ";
            cin >> i;
            obj.deletetask(i);
            break;
        }
        case 3:
            obj.deletealltask();
            break;
        case 4:
            obj.display();
            break;
        default:
            cout << "INVALID CHOICE" << endl;
        }
        cout << endl;
    }

    return 0;
}
